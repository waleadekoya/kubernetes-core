apiVersion: apps/v1
kind: Deployment
# https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
metadata:
  name: webapp
spec:
#  minReadySeconds: 30
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: webapp
    spec:
      containers:
        - name: webapp
          image: richardchesterwood/k8s-fleetman-webapp-angular:release2
#          imagePullPolicy: Always
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice

  selector:
    matchLabels:
      app: webapp

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue
  labels:
    app: queue
spec:
  selector:
    matchLabels:
      app: queue
  replicas: 1
  template:
    metadata:
      labels:
        app: queue
    spec:
      containers:
        - name: queue
          image: richardchesterwood/k8s-fleetman-queue:release2
#          imagePullPolicy: IfNotPresent

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-simulator
spec:
  selector:
    matchLabels:
      app: position-simulator
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: position-simulator
    spec:
      containers:
        - name: position-simulator
          image: richardchesterwood/k8s-fleetman-position-simulator:release2
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: position-tracker
spec:
  selector:
    matchLabels:
      app: position-tracker
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: position-tracker
    spec:
      containers:
        - name: position-tracker
          image: richardchesterwood/k8s-fleetman-position-tracker:release2
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  selector:
    matchLabels:
      app: api-gateway
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: richardchesterwood/k8s-fleetman-api-gateway:release2
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: production-microservice

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  replicas: 1
  template: # template for the pods
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:3.6.5-jessie
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage
          # pointer to the configuration of HOW we want the mount to be implemented
          persistentVolumeClaim:
            claimName: mongo-pvc

